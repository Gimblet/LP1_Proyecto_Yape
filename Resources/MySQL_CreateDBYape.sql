
USE SYS;

-- ELIMINANDO TODAS LA BD/TABLAS PARA EMPEZAR RAPIDAMENTE DESDE 0 EL QUERY

DROP DATABASE IF EXISTS dbYape;

SET foreign_key_checks = 0;

DROP TABLE IF EXISTS INFORMATIVOS.COMISION;
DROP TABLE IF EXISTS LOGINS.USUARIO;
DROP TABLE IF EXISTS LOGINS.USUARIO_CLIENTE;
DROP TABLE IF EXISTS LOGINS.USUARIO_ADMIN;
DROP TABLE IF EXISTS LOGINS.USUARIO_HEADADMIN;
DROP TABLE IF EXISTS TRANSACCIONES.DETALLE_USUYAPE;
DROP TABLE IF EXISTS TRANSACCIONES.YAPE;

-- ELIMINANDO LOS ESQUEMAS

DROP SCHEMA IF EXISTS LOGINS;
DROP SCHEMA IF EXISTS TRANSACCIONES;
DROP SCHEMA IF EXISTS INFORMATIVOS;

SET foreign_key_checks = 1;

CREATE DATABASE DBYAPE;
USE DBYAPE;

CREATE SCHEMA LOGINS;
CREATE SCHEMA TRANSACCIONES;
CREATE SCHEMA INFORMATIVOS;

CREATE TABLE INFORMATIVOS.COMISION
(
	VAL_COM		DOUBLE 		NOT NULL DEFAULT 10.5,		-- VALOR DE COMISION
    FEA_COM		DATETIME	NOT NULL DEFAULT NOW(),		-- FECHA ACTUALIZACION DE COMISION 
    CHECK(VAL_COM > 0)
);

CREATE TABLE LOGINS.USUARIO
(
	COD_USU       	INT					NOT NULL AUTO_INCREMENT, 	-- CODIGO
    DNI_USU			CHAR(8)				NOT NULL,					-- DNI
    TIP_USU     	VARCHAR(10)  	   	NOT NULL, 				  	-- TIPO DE USUARIO
    NOM_USU 		VARCHAR(50)  	   	NOT NULL, 				  	-- NOMBRE 
    APE_USU			VARCHAR(50)  	   	NOT NULL, 				  	-- APELLIDO
    TEL_USU         CHAR(9) 	 	   	NOT NULL UNIQUE, 		  	-- TELEFONO
    CON_USU      	VARCHAR(100) 	   	NOT NULL, 				  	-- CONTRASEÃ‘A
    FCC_USU			DATETIME 		   	NOT NULL DEFAULT NOW(),		-- FECHA DE CREACION DE CUENTA
    PRIMARY KEY (COD_USU),
    CHECK(TIP_USU IN('CLIENTE','ADMIN','HEADADMIN'))
);

CREATE TABLE LOGINS.USUARIO_CLIENTE
(
	COD_CLI			INT				NOT NULL,     					-- CODIGO
    SAL_CLI			DOUBLE 		 	NOT NULL DEFAULT '0.0' , 		-- SALDO
    ESC_CLI			VARCHAR(20)		NOT NULL DEFAULT 'Activa',		-- ESTADO DE CUENTA
    PRIMARY KEY(COD_CLI),
    FOREIGN KEY(COD_CLI) REFERENCES LOGINS.USUARIO(COD_USU),
    CHECK(SAL_CLI >= 0),
    CHECK(ESC_CLI IN ('Activa', 'Inactiva'))
);

CREATE TABLE LOGINS.USUARIO_ADMIN
(
	COD_ADM			INT			 	NOT NULL, 						-- CODIGO
    SUB_ADM			DOUBLE			NOT NULL DEFAULT 1050,			-- SUELDO BASE
    COM_ADM			DOUBLE   	 	NOT NULL DEFAULT 0,				-- COMISION DEL MES
    CAC_ADM			INT				NOT NULL DEFAULT 0,				-- CANTIDAD DE COMISIONES
    SUM_ADM			DOUBLE			NOT NULL DEFAULT 1050,			-- SUELDO TOTAL DEL MES
    PRIMARY KEY(COD_ADM),
    FOREIGN KEY(COD_ADM) REFERENCES LOGINS.USUARIO(COD_USU),
    CHECK(COM_ADM >= 0 AND CAC_ADM >= 0 AND SUB_ADM >= 1050 AND SUM_ADM >= 1050)
);

CREATE TABLE LOGINS.USUARIO_HEADADMIN
(
	COD_HEA			INT			 NOT NULL,							-- CODIGO
    SUE_HEA			DOUBLE		 NOT NULL DEFAULT 1800,				-- SUELDO
    PRIMARY KEY(COD_HEA),
    FOREIGN KEY(COD_HEA) REFERENCES LOGINS.USUARIO(COD_USU),
    CHECK(SUE_HEA >= 1800)
);

CREATE TABLE TRANSACCIONES.YAPE(
	COD_YAP		INT			PRIMARY KEY AUTO_INCREMENT,				-- CODIGO
    NRC_YAP		CHAR(9)		NOT NULL, 								-- NUMERO RECIBIENTE
    NRT_YAP		CHAR(9)		NOT NULL, 								-- NUMERO REALIZANTE
    MON_YAP		DOUBLE		NOT NULL, 								-- MONTO
    FEC_YAP		DATETIME	NOT NULL DEFAULT NOW(), 				-- FECHA DEL YAPE
    EST_YAP		VARCHAR(20) NOT NULL DEFAULT 'Corriente',
    FOREIGN KEY(NRC_YAP) REFERENCES LOGINS.USUARIO(TEL_USU),
    FOREIGN KEY(NRT_YAP) REFERENCES LOGINS.USUARIO(TEL_USU),
    CHECK(EST_YAP IN('Corriente','Modificado', 'Eliminado')) 
);

CREATE TABLE TRANSACCIONES.DETALLE_USUYAPE
(
	COD_USU		INT		 NOT NULL,
    COD_YAP		INT		 NOT NULL,
    PRIMARY KEY(COD_USU, COD_YAP),
    FOREIGN KEY(COD_USU) REFERENCES LOGINS.USUARIO(COD_USU),
    FOREIGN KEY(COD_YAP) REFERENCES TRANSACCIONES.YAPE(COD_YAP)
);