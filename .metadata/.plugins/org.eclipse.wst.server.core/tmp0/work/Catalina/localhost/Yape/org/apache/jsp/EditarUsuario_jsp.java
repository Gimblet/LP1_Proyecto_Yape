/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.100
 * Generated at: 2024-05-04 16:35:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import data.Logins;

public final class EditarUsuario_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(1);
    _jspx_imports_classes.add("data.Logins");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

Logins item = null;
if (request.getAttribute("infoUsuario") != null) {
	item = (Logins) request.getAttribute("infoUsuario");
}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<link href=\"Resources/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	background-color: purple;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("main {\r\n");
      out.write("	background-color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".noEditables {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	gap: 3px;\r\n");
      out.write("	margin: 70px 70px 22px 70px;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".noEditables div {\r\n");
      out.write("	padding: 6.5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".editables {\r\n");
      out.write("	margin: auto;\r\n");
      out.write("	padding: 40px;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	gap: 13px;\r\n");
      out.write("	margin-bottom: 55px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("section {\r\n");
      out.write("	margin-top: 122px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btns {\r\n");
      out.write("	margin-top: 15px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<title>Editar Usuario</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<main class=\"rounded\">\r\n");
      out.write("			<section>\r\n");
      out.write("				<form action=\"Servlet\" method=\"post\">\r\n");
      out.write("					<div class=\"noEditables border rounded\">\r\n");
      out.write("						<h4>Editar Usuario</h4>\r\n");
      out.write("						<div>\r\n");
      out.write("							<h5 class=\"alert alert-danger\">Informaci√≥n no editable</h5>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label class=\"text-secondary\">ID Yape : <strong>");
      out.print((item != null) ? item.getIdUsuario() : "");
      out.write("</strong></label>\r\n");
      out.write("							<input type=\"hidden\" name=\"idUsuario\"\r\n");
      out.write("								value=\"");
      out.print((item != null) ? item.getIdUsuario() : "");
      out.write("\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label class=\"text-secondary\">Numero : <strong>");
      out.print((item != null) ? item.getNumero() : "");
      out.write("</strong></label>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label class=\"text-secondary\">Tipo de Usuario : <strong>");
      out.print((item != null) ? item.getTipoUsuario() : "");
      out.write("</strong></label>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"editables border rounded\">\r\n");
      out.write("						<h5 class=\"alert alert-success\">Editables</h5>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label class=\"text-secondary\">Nombres Y Apellidos</label> <input\r\n");
      out.write("								class=\"form-control\" type=\"text\" name=\"txtNombreApellido\"\r\n");
      out.write("								value=\"");
      out.print((item != null) ? item.getNombreApellidos() : "");
      out.write("\">\r\n");
      out.write("						</div>\r\n");
      out.write("						");

						if (item.getTipoUsuario().equals("Cliente")) {
						
      out.write("\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label class=\"text-secondary\">Saldo</label> <input\r\n");
      out.write("								class=\"form-control\" type=\"text\" name=\"txtSaldo\"\r\n");
      out.write("								value=\"");
      out.print((item != null) ? item.getSaldo() : "");
      out.write("\">\r\n");
      out.write("						</div>\r\n");
      out.write("						");

						}
						
      out.write("\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label class=\"text-secondary\">Clave</label> <input\r\n");
      out.write("								class=\"form-control\" type=\"text\" name=\"txtClave\"\r\n");
      out.write("								value=\"");
      out.print((item != null) ? item.getClave() : "");
      out.write("\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"btn-group btns\">\r\n");
      out.write("							<input class=\"btn btn-primary\" type=\"submit\" name=\"type\" value=\"Editar Usuario\"> \r\n");
      out.write("							<a href=\"Servlet?type=Volver\"class=\"btn btn-secondary\">Regresar</a>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</form>\r\n");
      out.write("			</section>\r\n");
      out.write("		</main>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
